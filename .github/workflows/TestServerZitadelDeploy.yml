name: Test server Zitadel
run-name: ${{ github.actor }} - ${{ github.event.head_commit.message }} commit is running
on:
  workflow_dispatch:

jobs:
  AutoDeployment:
    runs-on: ubuntu-latest
    steps:
    
      - name: Get Runner IP
        run: |
          IP_ADDRESS=$(curl -s https://api.ipify.org)
          echo "IP_ADDRESS=$IP_ADDRESS" >> $GITHUB_ENV

      - name: Set Variables
        run: echo "ELASTIC_IP='ec2-user@3.227.166.26'" >> $GITHUB_ENV

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update Security Group
        run: |
          SECURITY_GROUP_ID="sg-0c78d4025e3337f81"
          IP_ADDRESS=${{ env.IP_ADDRESS }}
          aws ec2 authorize-security-group-ingress \
            --group-id $SECURITY_GROUP_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${IP_ADDRESS}/32

      - name: Setup SSH Key
        env:
          SSH_PRIVATE_KEY_FOR_EC2: ${{ secrets.SSH_PRIVATE_KEY_FOR_EC2 }}
        run: |
          echo "$SSH_PRIVATE_KEY_FOR_EC2" > SSH_PRIVATE_KEY_FOR_EC2.pem
          chmod 600 SSH_PRIVATE_KEY_FOR_EC2.pem
    
      - name: Add remote host to known_hosts # Add this to Startup Scripts on Terraform
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 3.227.166.26 >> ~/.ssh/known_hosts


      - name: Clone Secrets to EC2
        run: |
          ssh -i SSH_PRIVATE_KEY_FOR_EC2.pem ${{ env.ELASTIC_IP }} << 'EOF'
          mkdir -p ~/wonderWhy/zitadel/certs/
          sudo chown -R ec2-user:ec2-user ~/wonderWhy/zitadel/certs/
          chmod 755 ~/wonderWhy/zitadel/certs/
          EOF
          echo "${{ secrets.TEST_DOMAIN_CA_CERTS_FULL_CHAIN }}" > fullchain.pem  
          echo "${{ secrets.TEST_DOMAIN_CA_CERTS_PRIVATE_KEY }}" > privkey.pem  
          sudo rsync -avz  -e 'ssh -i SSH_PRIVATE_KEY_FOR_EC2.pem -o StrictHostKeyChecking=no' fullchain.pem  ${{ env.ELASTIC_IP }}:~/wonderWhy/zitadel/certs/
          sudo rsync -avz  -e 'ssh -i SSH_PRIVATE_KEY_FOR_EC2.pem -o StrictHostKeyChecking=no' privkey.pem  ${{ env.ELASTIC_IP }}:~/wonderWhy/zitadel/certs/

      - name: Start Zitadel Container
        run: |
            ssh -t -i SSH_PRIVATE_KEY_FOR_EC2.pem ${{ env.ELASTIC_IP }} << EOF
                set -e
                cd wonderWhy
                source /home/ec2-user/.bashrc
                
                if ! docker network inspect "wonderwhy_postgres-network" >/dev/null 2>&1; then
                  echo "Creating Docker network: wonderwhy_postgres-network"
                  docker network create "wonderwhy_postgres-network"
                else
                  echo "Network 'wonderwhy_postgres-network' already exists."
                fi
                sudo chmod 666 /var/run/docker.sock
                sudo docker-compose stop zitadel
                sudo docker-compose up zitadel -d
            EOF

      - name: Remove Added Security Group Rule
        run: |
          SECURITY_GROUP_ID="sg-0c78d4025e3337f81"
          aws ec2 revoke-security-group-ingress \
            --group-id $SECURITY_GROUP_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${IP_ADDRESS}/32