name: Rvs server Backend
run-name: ${{ github.actor }} - ${{ github.event.head_commit.message }} commit is running
on:
  workflow_dispatch:

jobs:
  Backend_Build_Dist:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          repository: WonderWhyDev/wonderWhy
          path: wonderWhy
          token: ${{ secrets.REPO_READ_TOKEN }}
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: '**/yarn.lock'
      - run: |
          cd wonderWhy
          yarn install
          yarn b build
      - name: Upload Dist
        uses: actions/upload-artifact@v2
        with:
          name: dist-folder-backend
          path: wonderWhy/backend/dist/

  Backend_Deployment:
    runs-on: ubuntu-latest
    needs: [Backend_Build_Dist]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          repository: WonderWhyDev/wonderWhy
          path: wonderWhy
          token: ${{ secrets.REPO_READ_TOKEN }}
      - name: Download dist folder
        uses: actions/download-artifact@v2
        with:
          name: dist-folder-backend
          path: wonderWhy/backend/dist/        
      - name: Get Runner IP
        run: |
          IP_ADDRESS=$(curl -s https://api.ipify.org)
          echo "IP_ADDRESS=$IP_ADDRESS" >> $GITHUB_ENV

      - name: Set Variables
        run: echo "ELASTIC_IP=ec2-user@54.224.145.219" >> $GITHUB_ENV

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.RVS_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.RVS_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update Security Group
        run: |
          SECURITY_GROUP_ID="sg-0f3750227452965cb" 
          IP_ADDRESS=${{ env.IP_ADDRESS }}
          aws ec2 authorize-security-group-ingress \
            --group-id $SECURITY_GROUP_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${IP_ADDRESS}/32

      - name: Setup SSH Key
        env:
          SSH_PRIVATE_KEY_FOR_EC2: ${{ secrets.SSH_PRIVATE_KEY_FOR_EC2 }}
        run: |
            echo "$SSH_PRIVATE_KEY_FOR_EC2" > SSH_PRIVATE_KEY_FOR_EC2.pem
            chmod 600 SSH_PRIVATE_KEY_FOR_EC2.pem

      - name: Add remote host to known_hosts # Add this to Startup Scripts on Terraform
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 54.224.145.219 >> ~/.ssh/known_hosts

      - name: Clone Repository
        run: |
          rsync -avz -e 'ssh -i SSH_PRIVATE_KEY_FOR_EC2.pem -o StrictHostKeyChecking=no' /home/runner/work/deploy/deploy/wonderWhy ${{ env.ELASTIC_IP }}:~/

      - name: Clone Dist Folder
        run: rsync -avz -e 'ssh -i SSH_PRIVATE_KEY_FOR_EC2.pem' /home/runner/work/deploy/deploy/wonderWhy/backend/dist/*  ${{ env.ELASTIC_IP }}:~/wonderWhy/backend/dist/
      
      - name: Start Docker Container
        env:
          CLIENT_ID: ${{ secrets.RVS_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.RVS_CLIENT_SECRET }}
        run : |
          ssh -t -i SSH_PRIVATE_KEY_FOR_EC2.pem ${{ env.ELASTIC_IP }}  << EOF
            set -e
            cd wonderWhy
            sed -i '/^export CLIENT_ID=/d' ~/.bashrc
            echo 'export CLIENT_ID=$CLIENT_ID' >> ~/.bashrc
            sed -i '/^export CLIENT_SECRET=/d' ~/.bashrc
            echo 'export CLIENT_SECRET=$CLIENT_SECRET' >> ~/.bashrc
            source /home/ec2-user/.bashrc
            docker-compose stop backend 
            docker-compose up setup -d
            docker-compose up backend -d
          EOF
        
      - name: Remove Added Security Group Rule
        run: |
          SECURITY_GROUP_ID="sg-0f3750227452965cb" 
          aws ec2 revoke-security-group-ingress \
            --group-id $SECURITY_GROUP_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${IP_ADDRESS}/32
