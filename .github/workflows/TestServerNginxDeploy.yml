# name: Test server Nginx
# run-name: ${{ github.actor }} - ${{ github.event.head_commit.message }} commit is running
# on:
#   workflow_dispatch:

# jobs:
#   AutoDeployment:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Check out repository code
#         uses: actions/checkout@v4
#         with:
#           repository: WonderWhyDev/wonderWhy
#           path: wonderWhy
#           token: ${{ secrets.REPO_READ_TOKEN }}
#       - name: Get Runner IP
#         run: |
#           IP_ADDRESS=$(curl -s https://api.ipify.org)
#           echo "IP_ADDRESS=$IP_ADDRESS" >> $GITHUB_ENV

#       - name: Set Variables
#         run: echo "ELASTIC_IP=ec2-user@54.161.136.144" >> $GITHUB_ENV

#       - name: Configure AWS CLI
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-east-1

#       - name: Update Security Group
#         run: |
#           SECURITY_GROUP_ID="sg-06ac079bdce544635"
#           IP_ADDRESS=${{ env.IP_ADDRESS }}
#           aws ec2 authorize-security-group-ingress \
#             --group-id $SECURITY_GROUP_ID \
#             --protocol tcp \
#             --port 22 \
#             --cidr ${IP_ADDRESS}/32

#       - name: Setup SSH Key
#         env:
#           SSH_PRIVATE_KEY_FOR_EC2: ${{ secrets.SSH_PRIVATE_KEY_FOR_EC2 }}
#         run: |
#           echo "$SSH_PRIVATE_KEY_FOR_EC2" > SSH_PRIVATE_KEY_FOR_EC2.pem
#           chmod 600 SSH_PRIVATE_KEY_FOR_EC2.pem
    
#       - name: Add remote host to known_hosts # Add this to Startup Scripts on Terraform
#         run: |
#           mkdir -p ~/.ssh
#           ssh-keyscan -H 54.161.136.144 >> ~/.ssh/known_hosts

#       - name: Clone Repository to EC2
#         run: |
#           rsync -avz -e 'ssh -i SSH_PRIVATE_KEY_FOR_EC2.pem' /home/runner/work/deploy/deploy/wonderWhy ${{ env.ELASTIC_IP }}:~/
        
#       - name: Clone Secrets to EC2
#         run: |
#           echo "${{ secrets.RVN_DOMAIN_CA_CERTS_FULL_CHAIN }}" > fullchain.pem  
#           echo "${{ secrets.RVN_DOMAIN_CA_CERTS_PRIVATE_KEY }}" > privkey.pem  
#           rsync -avz  -e 'ssh -i SSH_PRIVATE_KEY_FOR_EC2.pem -o StrictHostKeyChecking=no' fullchain.pem  ${{ env.ELASTIC_IP }}:~/wonderWhy/nginx/certs/
#           rsync -avz  -e 'ssh -i SSH_PRIVATE_KEY_FOR_EC2.pem -o StrictHostKeyChecking=no' privkey.pem  ${{ env.ELASTIC_IP }}:~/wonderWhy/nginx/certs/

#       - name: Start Nginx Container
#         run: |
#             ssh -t -i SSH_PRIVATE_KEY_FOR_EC2.pem ${{ env.ELASTIC_IP }} << EOF
#                 set -e
#                 cd wonderWhy
#                 docker-compose stop nginx
#                 docker-compose up nginx -d
#             EOF
            
#       - name: Remove Added Security Group Rule
#         run: |
#           SECURITY_GROUP_ID="sg-06ac079bdce544635"
#           aws ec2 revoke-security-group-ingress \
#             --group-id $SECURITY_GROUP_ID \
#             --protocol tcp \
#             --port 22 \
#             --cidr ${IP_ADDRESS}/32







# ###------------------ BELOW CODE WRITTEN FOR ZIPPING AND TRANSFERING THE CODE TO EC2 INSTANCE--------------------------------------###

name: Test server Nginx
run-name: ${{ github.actor }} - ${{ github.event.head_commit.message }} commit is running
on:
  workflow_dispatch:

jobs:
  AutoDeployment:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          repository: WonderWhyDev/wonderWhy
          path: wonderWhy
          token: ${{ secrets.REPO_READ_TOKEN }}
      - name: Get Runner IP
        run: |
          IP_ADDRESS=$(curl -s https://api.ipify.org)
          echo "IP_ADDRESS=$IP_ADDRESS" >> $GITHUB_ENV

      - name: Set Variables
        run: echo "ELASTIC_IP=ec2-user@3.227.166.26" >> $GITHUB_ENV

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update Security Group
        run: |
          SECURITY_GROUP_ID="sg-0c78d4025e3337f81"
          IP_ADDRESS=${{ env.IP_ADDRESS }}
          aws ec2 authorize-security-group-ingress \
            --group-id $SECURITY_GROUP_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${IP_ADDRESS}/32

      - name: Setup SSH Key
        env:
          SSH_PRIVATE_KEY_FOR_EC2: ${{ secrets.SSH_PRIVATE_KEY_FOR_EC2 }}
        run: |
          echo "$SSH_PRIVATE_KEY_FOR_EC2" > SSH_PRIVATE_KEY_FOR_EC2.pem
          chmod 600 SSH_PRIVATE_KEY_FOR_EC2.pem
    
      - name: Add remote host to known_hosts # Add this to Startup Scripts on Terraform
        run: |
          ls
          mkdir -p ~/.ssh
          ssh-keyscan -H 3.227.166.26 >> ~/.ssh/known_hosts

      - name: Zip Files
        run: |
          cd "/home/runner/work/wonderMoveDeploy/wonderMoveDeploy/wonderWhy/nginx" && zip -r deploy_package.zip .

      - name: Transfer ZIP to EC2
        run: |
          ssh -i SSH_PRIVATE_KEY_FOR_EC2.pem ${{ env.ELASTIC_IP }} << 'EOF'
          mkdir -p ~/wonderWhy/nginx
          rm -rf ~/wonderWhy/nginx/*
          EOF
          rsync -avz -e 'ssh -i SSH_PRIVATE_KEY_FOR_EC2.pem' /home/runner/work/wonderMoveDeploy/wonderMoveDeploy/deploy_package.zip ${{ env.ELASTIC_IP }}:~/wonderWhy/nginx/
        
      - name: Unzip and Clean Up on EC2
        run: |
          ssh -i SSH_PRIVATE_KEY_FOR_EC2.pem ${{ env.ELASTIC_IP }} << 'EOF'
          unzip -o ~/wonderWhy/nginx/deploy_package.zip -d ~/wonderWhy/nginx
          rm -f ~/wonderWhy/nginx/deploy_package.zip
          EOF
        
        
      - name: Clone Secrets to EC2
        run: |
          echo "${{ secrets.RVN_DOMAIN_CA_CERTS_FULL_CHAIN }}" > fullchain.pem  
          echo "${{ secrets.RVN_DOMAIN_CA_CERTS_PRIVATE_KEY }}" > privkey.pem  
          rsync -avz  -e 'ssh -i SSH_PRIVATE_KEY_FOR_EC2.pem -o StrictHostKeyChecking=no' fullchain.pem  ${{ env.ELASTIC_IP }}:~/wonderWhy/nginx/certs/
          rsync -avz  -e 'ssh -i SSH_PRIVATE_KEY_FOR_EC2.pem -o StrictHostKeyChecking=no' privkey.pem  ${{ env.ELASTIC_IP }}:~/wonderWhy/nginx/certs/

      - name: Start Nginx Container
        run: |
            ssh -t -i SSH_PRIVATE_KEY_FOR_EC2.pem ${{ env.ELASTIC_IP }} << EOF
                ls ~/wonderWhy/nginx
            #     set -e
            #     cd wonderWhy/nginx
            #     docker-compose stop nginx
            #     docker-compose up nginx -d
            # EOF
            
      - name: Remove Added Security Group Rule
        run: |
          SECURITY_GROUP_ID="sg-0c78d4025e3337f81"
          aws ec2 revoke-security-group-ingress \
            --group-id $SECURITY_GROUP_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${IP_ADDRESS}/32

