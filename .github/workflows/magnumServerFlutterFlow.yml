name: Magnum server Flutter Flow
run-name: ${{ github.actor }} - ${{ github.event.head_commit.message }} commit is running
on:
  workflow_dispatch:

jobs:
  FlutterFlowWebBuild:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          repository: WonderWhyDev/wonderWhy
          path: wonderWhy
          token: ${{ secrets.REPO_READ_TOKEN }}
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."

      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
      - run: |
          cd wonderWhy/flutterFlow/magnum
          sed -i 's|<base href="/">|<base href="/flutterflow/">|' web/index.html
          flutter clean
          flutter pub get         
          flutter build web

      - name: Upload Web Build and UI Build as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ff-web-app
          path: wonderWhy/flutterFlow/magnum/build/web

  FF_UI_Deployment:
    runs-on: ubuntu-latest
    needs: [UIAndFlutterFlowWebBuild]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          repository: WonderWhyDev/wonderWhy
          path: wonderWhy
          token: ${{ secrets.REPO_READ_TOKEN }}

      - name: Download dist folder
        uses: actions/download-artifact@v3
        with:
          name: ff-web-app
          path: wonderWhy/flutterFlow/magnum/build/web

      - name: Set Variables
        run: echo "ELASTIC_IP=ec2-user@52.4.164.231" >> $GITHUB_ENV

      - name: Get Runner IP
        run: |
          IP_ADDRESS=$(curl -s https://api.ipify.org)
          echo "IP_ADDRESS=$IP_ADDRESS" >> $GITHUB_ENV

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.MAGNUM_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.MAGNUM_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Update Security Group
        run: |
          SECURITY_GROUP_ID="sg-0109e0cf4e941e2f5"
          IP_ADDRESS=${{ env.IP_ADDRESS }}
          aws ec2 authorize-security-group-ingress \
            --group-id $SECURITY_GROUP_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${IP_ADDRESS}/32

      - name: Setup SSH Key
        env:
          SSH_PRIVATE_KEY_FOR_EC2: ${{ secrets.SSH_PRIVATE_KEY_FOR_EC2 }}
        run: |
            echo "$SSH_PRIVATE_KEY_FOR_EC2" > SSH_PRIVATE_KEY_FOR_EC2.pem
            chmod 600 SSH_PRIVATE_KEY_FOR_EC2.pem

      - name: Add remote host to known_hosts # Add this to Startup Scripts on Terraform
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 52.4.164.231 >> ~/.ssh/known_hosts
          
      - name: Clone Repository to EC2
        run: |
          rsync -avz -e 'ssh -i SSH_PRIVATE_KEY_FOR_EC2.pem' /home/runner/work/wonderMoveDeploy/wonderMoveDeploy/wonderWhy ${{ env.ELASTIC_IP }}:~/

      - name: Copy Dist Folder
        run: | 
          rsync -avz -e 'ssh -i SSH_PRIVATE_KEY_FOR_EC2.pem' /home/runner/work/wonderMoveDeploy/wonderMoveDeploy/wonderWhy/flutterFlow/magnum/build/web/*  ${{ env.ELASTIC_IP }}:~/wonderWhy/nginx/flutterflow/

      - name: Remove Added Security Group Rule
        run: |
          SECURITY_GROUP_ID="sg-0109e0cf4e941e2f5"
          aws ec2 revoke-security-group-ingress \
            --group-id $SECURITY_GROUP_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${IP_ADDRESS}/32

      
