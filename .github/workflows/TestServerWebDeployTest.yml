name: Test server UI Test
run-name: ${{ github.actor }} - ${{ github.event.head_commit.message }} commit is running
on:
  workflow_dispatch:

jobs:
  UIWebBuild:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          repository: WonderWhyDev/wonderWhy
          path: wonderWhy
          token: ${{ secrets.REPO_READ_TOKEN }}
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: '**/yarn.lock'
      - run: |
          cd wonderWhy
          yarn install
          cd web
          rm -rf .env
          touch .env
          echo "CLIENT_ID= ${{ secrets.MAGNUM_CLIENT_ID }} " >> .env
          echo "CLIENT_SECRET= ${{ secrets.MAGNUM_CLIENT_SECRET }} " >> .env
          yarn build
          zip -r dist.zip dist
          ls 


      - name: Upload Web Build as artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-folder-ui
          path: wonderWhy/web/dist.zip

  UI_Deployment:
    runs-on: ubuntu-latest
    needs: [UIWebBuild]
    steps:
      
      - name: Download dist zip file
        uses: actions/download-artifact@v3
        with:
          name: dist-folder-ui
          path: wonderWhy/web/

      - name: Set Variables
        run: echo "ELASTIC_IP=ec2-user@3.227.166.26" >> $GITHUB_ENV

      - name: Get Runner IP
        run: |
          IP_ADDRESS=$(curl -s https://api.ipify.org)
          echo "IP_ADDRESS=$IP_ADDRESS" >> $GITHUB_ENV

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Update Security Group
        run: |
          SECURITY_GROUP_ID="sg-0c78d4025e3337f81"
          IP_ADDRESS=${{ env.IP_ADDRESS }}
          aws ec2 authorize-security-group-ingress \
            --group-id $SECURITY_GROUP_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${IP_ADDRESS}/32

      - name: Setup SSH Key
        env:
          SSH_PRIVATE_KEY_FOR_EC2: ${{ secrets.SSH_PRIVATE_KEY_FOR_EC2 }}
        run: |
            echo "$SSH_PRIVATE_KEY_FOR_EC2" > SSH_PRIVATE_KEY_FOR_EC2.pem
            chmod 600 SSH_PRIVATE_KEY_FOR_EC2.pem

      - name: Add remote host to known_hosts 
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 3.227.166.26 >> ~/.ssh/known_hosts
          
      - name: Copy Dist ZIP FILE
        run: | 
          rsync -avz -e 'ssh -i SSH_PRIVATE_KEY_FOR_EC2.pem' /home/runner/work/wonderMoveDeploy/wonderMoveDeploy/wonderWhy/web/dist.zip  ${{ env.ELASTIC_IP }}:~/wonderWhy/nginx/html/

      - name: Unzip  Web Build on EC2
        run: |
          ssh -i SSH_PRIVATE_KEY_FOR_EC2.pem ${{ env.ELASTIC_IP }} << 'EOF'
          unzip -o ~/wonderWhy/nginx/html/web.zip -d ~/wonderWhy/nginx/html/
          cd ~/wonderWhy/nginx/html/
          rsync -a --remove-source-files web/ .
          rm -rf web
          rm -rf web.zip
          EOF

      - name: Remove Added Security Group Rule
        run: |
          SECURITY_GROUP_ID="sg-0c78d4025e3337f81"
          aws ec2 revoke-security-group-ingress \
            --group-id $SECURITY_GROUP_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${IP_ADDRESS}/32